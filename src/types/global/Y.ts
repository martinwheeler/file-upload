export interface Y {
  Anim: () => void;
  Array: () => void;
  ArrayList: () => void;
  AsyncQueue: () => void;
  Attribute: () => void;
  AttributeComplex: () => void;
  AttributeCore: () => void;
  AttributeEvents: () => void;
  AttributeExtras: () => void;
  AttributeObservable: () => void;
  AutoComplete: () => void;
  AutoCompleteBase: () => void;
  AutoCompleteFilters: object;
  AutoCompleteHighlighters: object;
  AutoCompleteList: () => void;
  Base: () => void;
  BaseCore: () => void;
  BaseObservable: () => void;
  Cache: () => void;
  Calendar: () => void;
  CalendarBase: () => void;
  ChartJS: object;
  ClassNameManager: object;
  ClickableRail: () => void;
  Color: object;
  Cookie: object;
  CustomEvent: () => void;
  DD: object;
  DOM: object;
  DOM2EventFacade: () => void;
  DOMEventFacade: () => void;
  Data: object;
  DataSchema: object;
  DataSource: object;
  DataType: object;
  Date: object;
  Do: object;
  Easing: object;
  Env: object;
  Escape: object;
  Event: object;
  EventFacade: () => void;
  EventHandle: () => void;
  EventTarget: () => void;
  Features: object;
  FileFlash: () => void;
  FileHTML5: () => void;
  GestureSimulation: () => void;
  Get: object;
  Global: object;
  Handlebars: object;
  Highlight: object;
  History: () => void;
  HistoryBase: () => void;
  HistoryHTML5: () => void;
  HistoryHash: () => void;
  IO: () => void;
  Intl: object;
  JSON: object;
  JSONPRequest: () => void;
  Lang: object;
  Model: () => void;
  ModelList: () => void;
  ModelSync: object;
  Node: () => void;
  NodeList: () => void;
  Number: object;
  Object: () => void;
  Overlay: () => void;
  Parallel: () => void;
  Parsers: object;
  Plugin: object;
  Promise: () => void;
  QueryString: object;
  Queue: () => void;
  Resize: () => void;
  SQS: object;
  SQSAnim: () => void;
  SWF: () => void;
  SWFDetect: object;
  Selector: object;
  Slider: () => void;
  SliderBase: () => void;
  SliderValueRange: () => void;
  Squarespace: object;
  State: () => void;
  Subscriber: () => void;
  SyntheticEvent: () => void;
  Template: object;
  Text: object;
  Transition: () => void;
  TransitionNative: () => void;
  UA: object;
  Uploader: () => void;
  UploaderFlash: () => void;
  UploaderHTML5: () => void;
  ValueChange: object;
  View: () => void;
  Widget: () => void;
  WidgetChild: () => void;
  WidgetParent: () => void;
  WidgetPosition: () => void;
  WidgetPositionAlign: () => void;
  WidgetPositionConstrain: () => void;
  WidgetStack: () => void;
  WidgetStdMod: () => void;
  XML: object;
  after: () => void;
  aggregate: () => void;
  all: () => void;
  augment: () => void;
  batch: () => void;
  before: () => void;
  bind: () => void;
  cached: () => void;
  clone: () => void;
  config: object;
  constructor: () => void;
  delegate: () => void;
  detach: () => void;
  detachAll: () => void;
  each: () => void;
  extend: () => void;
  fire: () => void;
  getEvent: () => void;
  getLocation: () => void;
  getSibling: () => void;
  id: string;
  instanceOf: () => void;
  io: () => void;
  jsonp: () => void;
  later: () => void;
  log: () => void;
  merge: () => void;
  message: () => void;
  mix: () => void;
  on: () => void;
  once: () => void;
  onceAfter: () => void;
  one: () => void;
  parseType: () => void;
  publish: () => void;
  rbind: () => void;
  some: () => void;
  soon: () => void;
  subscribe: () => void;
  substitute: () => void;
  throttle: () => void;
  unsubscribe: () => void;
  unsubscribeAll: () => void;
  version: string;
  when: () => void;
  _getFullType: () => void;
  _loading: boolean;
  _monitor: () => void;
  _publish: () => void;
  _yuiaop: object;
  _yuid: string;
  _yuievt: object;
}
